from cryptography.fernet import Fernet

# Gerar uma chave e salv√°-la em um arquivo
def generate_key():
    key = Fernet.generate_key()
    with open("key.key", "wb") as key_file:
        key_file.write(key)

# Carregar a chave do arquivo
def load_key():
    return open("key.key", "rb").read()

# Criptografar um arquivo
def encrypt_file(file_path):
    key = load_key()
    fernet = Fernet(key)

    with open(file_path, "rb") as file:
        data = file.read()

    encrypted_data = fernet.encrypt(data)

    with open(file_path, "wb") as file:
        file.write(encrypted_data)

# Descriptografar um arquivo
def decrypt_file(file_path):
    key = load_key()
    fernet = Fernet(key)

    with open(file_path, "rb") as file:
        encrypted_data = file.read()

    decrypted_data = fernet.decrypt(encrypted_data)

    with open(file_path, "wb") as file:
        file.write(decrypted_data)

# Exemplo de uso
if __name__ == "__main__":
    generate_key()  # Execute isso uma vez para criar a chave
    encrypt_file("meu_arquivo.txt")  # Criptografa o arquivo
    decrypt_file("meu_arquivo.txt")  # Descriptografa o arquivo
